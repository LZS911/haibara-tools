/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SettingsIndexRouteImport } from './routes/settings/index'
import { Route as MediaToDocsIndexRouteImport } from './routes/media-to-docs/index'
import { Route as BilibiliDownloaderIndexRouteImport } from './routes/bilibili-downloader/index'
import { Route as VoiceCloningTrainingIndexRouteImport } from './routes/voice-cloning/training/index'
import { Route as VoiceCloningSynthesisIndexRouteImport } from './routes/voice-cloning/synthesis/index'
import { Route as MediaToDocsConvertHistoryIndexRouteImport } from './routes/media-to-docs/convert-history/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const MediaToDocsIndexRoute = MediaToDocsIndexRouteImport.update({
  id: '/media-to-docs/',
  path: '/media-to-docs/',
  getParentRoute: () => rootRouteImport,
} as any)
const BilibiliDownloaderIndexRoute = BilibiliDownloaderIndexRouteImport.update({
  id: '/bilibili-downloader/',
  path: '/bilibili-downloader/',
  getParentRoute: () => rootRouteImport,
} as any)
const VoiceCloningTrainingIndexRoute =
  VoiceCloningTrainingIndexRouteImport.update({
    id: '/voice-cloning/training/',
    path: '/voice-cloning/training/',
    getParentRoute: () => rootRouteImport,
  } as any)
const VoiceCloningSynthesisIndexRoute =
  VoiceCloningSynthesisIndexRouteImport.update({
    id: '/voice-cloning/synthesis/',
    path: '/voice-cloning/synthesis/',
    getParentRoute: () => rootRouteImport,
  } as any)
const MediaToDocsConvertHistoryIndexRoute =
  MediaToDocsConvertHistoryIndexRouteImport.update({
    id: '/media-to-docs/convert-history/',
    path: '/media-to-docs/convert-history/',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/bilibili-downloader': typeof BilibiliDownloaderIndexRoute
  '/media-to-docs': typeof MediaToDocsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/media-to-docs/convert-history': typeof MediaToDocsConvertHistoryIndexRoute
  '/voice-cloning/synthesis': typeof VoiceCloningSynthesisIndexRoute
  '/voice-cloning/training': typeof VoiceCloningTrainingIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/bilibili-downloader': typeof BilibiliDownloaderIndexRoute
  '/media-to-docs': typeof MediaToDocsIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/media-to-docs/convert-history': typeof MediaToDocsConvertHistoryIndexRoute
  '/voice-cloning/synthesis': typeof VoiceCloningSynthesisIndexRoute
  '/voice-cloning/training': typeof VoiceCloningTrainingIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/bilibili-downloader/': typeof BilibiliDownloaderIndexRoute
  '/media-to-docs/': typeof MediaToDocsIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/media-to-docs/convert-history/': typeof MediaToDocsConvertHistoryIndexRoute
  '/voice-cloning/synthesis/': typeof VoiceCloningSynthesisIndexRoute
  '/voice-cloning/training/': typeof VoiceCloningTrainingIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/bilibili-downloader'
    | '/media-to-docs'
    | '/settings'
    | '/media-to-docs/convert-history'
    | '/voice-cloning/synthesis'
    | '/voice-cloning/training'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/bilibili-downloader'
    | '/media-to-docs'
    | '/settings'
    | '/media-to-docs/convert-history'
    | '/voice-cloning/synthesis'
    | '/voice-cloning/training'
  id:
    | '__root__'
    | '/'
    | '/bilibili-downloader/'
    | '/media-to-docs/'
    | '/settings/'
    | '/media-to-docs/convert-history/'
    | '/voice-cloning/synthesis/'
    | '/voice-cloning/training/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BilibiliDownloaderIndexRoute: typeof BilibiliDownloaderIndexRoute
  MediaToDocsIndexRoute: typeof MediaToDocsIndexRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
  MediaToDocsConvertHistoryIndexRoute: typeof MediaToDocsConvertHistoryIndexRoute
  VoiceCloningSynthesisIndexRoute: typeof VoiceCloningSynthesisIndexRoute
  VoiceCloningTrainingIndexRoute: typeof VoiceCloningTrainingIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/media-to-docs/': {
      id: '/media-to-docs/'
      path: '/media-to-docs'
      fullPath: '/media-to-docs'
      preLoaderRoute: typeof MediaToDocsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bilibili-downloader/': {
      id: '/bilibili-downloader/'
      path: '/bilibili-downloader'
      fullPath: '/bilibili-downloader'
      preLoaderRoute: typeof BilibiliDownloaderIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/voice-cloning/training/': {
      id: '/voice-cloning/training/'
      path: '/voice-cloning/training'
      fullPath: '/voice-cloning/training'
      preLoaderRoute: typeof VoiceCloningTrainingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/voice-cloning/synthesis/': {
      id: '/voice-cloning/synthesis/'
      path: '/voice-cloning/synthesis'
      fullPath: '/voice-cloning/synthesis'
      preLoaderRoute: typeof VoiceCloningSynthesisIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/media-to-docs/convert-history/': {
      id: '/media-to-docs/convert-history/'
      path: '/media-to-docs/convert-history'
      fullPath: '/media-to-docs/convert-history'
      preLoaderRoute: typeof MediaToDocsConvertHistoryIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BilibiliDownloaderIndexRoute: BilibiliDownloaderIndexRoute,
  MediaToDocsIndexRoute: MediaToDocsIndexRoute,
  SettingsIndexRoute: SettingsIndexRoute,
  MediaToDocsConvertHistoryIndexRoute: MediaToDocsConvertHistoryIndexRoute,
  VoiceCloningSynthesisIndexRoute: VoiceCloningSynthesisIndexRoute,
  VoiceCloningTrainingIndexRoute: VoiceCloningTrainingIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

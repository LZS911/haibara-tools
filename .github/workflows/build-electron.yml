name: Build Electron App

on:
  # 触发条件
  pull_request:
    branches: [main]
  push:
    branches: [main]
    tags:
      - 'v*' # 匹配 v1.0.0, v2.1.3 等格式

  # 允许手动触发
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm build:client

      - name: Build Electron app
        run: pnpm electron:build

      - name: Build release packages
        run: pnpm dist
        env:
          # GitHub token for release
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # macOS 代码签名（可选，需要配置 secrets）
          # CSC_LINK: ${{ secrets.MAC_CERT_P12_BASE64 }}
          # CSC_KEY_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_APP_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: |
            release/*.exe
            release/*.dmg
            release/*.zip
            release/*.AppImage
            release/*.deb
          if-no-files-found: ignore

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release/*.exe
            release/*.dmg
            release/*.zip
            release/*.AppImage
            release/*.deb
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
